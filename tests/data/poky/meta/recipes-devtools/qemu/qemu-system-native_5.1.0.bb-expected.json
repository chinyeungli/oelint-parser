{
  "BPN": "qemu",
  "inherit": "native\npkgconfig ptest",
  "SUMMARY": "Fast open source processor emulator",
  "DESCRIPTION": "QEMU is a hosted virtual machine monitor: it emulates the \u001bmachine's processor through dynamic binary translation and provides a set \u001bof different hardware and device models for the machine, enabling it to run \u001ba variety of guest operating systems",
  "HOMEPAGE": "http://qemu.org",
  "LICENSE": "GPLv2 & LGPLv2.1",
  "RDEPENDS_${PN}-ptest": "bash make",
  "DEPENDS": "glib-2.0-native zlib-native pixman-native qemu-native bison-native",
  "EXTRA_OECONF": " --target-list=!!!inlineblock!!!\n \u001b    --prefix=${prefix} \u001b    --bindir=${bindir} \u001b    --includedir=${includedir} \u001b    --libdir=${libdir} \u001b    --mandir=${mandir} \u001b    --datadir=${datadir} \u001b    --docdir=${docdir}/${BPN} \u001b    --sysconfdir=${sysconfdir} \u001b    --libexecdir=${libexecdir} \u001b    --localstatedir=${localstatedir} \u001b    --with-confsuffix=/${BPN} \u001b    --disable-strip \u001b    --disable-werror \u001b    --extra-cflags='${CFLAGS}' \u001b    --extra-ldflags='${LDFLAGS}' \u001b    --with-git=/bin/false \u001b    --disable-git-update \u001b    ${PACKAGECONFIG_CONFARGS} \u001b    \n --python=${HOSTTOOLS_DIR}/python3",
  "PACKAGECONFIG": "fdt alsa kvm \u001b    virglrenderer glx \u001b\n!!!inlineblock!!!\nkvm virglrenderer glx gtk+\nkvm virglrenderer glx gtk+",
  "LIC_FILES_CHKSUM": "file://COPYING;md5=441c28d2cf86e15a37fa47e15a72fbac \u001b                    file://COPYING.LIB;endline=24;md5=8c5efda6cf1e1b03dcfd0e6c0d271c7f",
  "SRC_URI": "https://download.qemu.org/${BPN}-${PV}.tar.xz \u001b           file://powerpc_rom.bin \u001b           file://run-ptest \u001b           file://0001-qemu-Add-missing-wacom-HID-descriptor.patch \u001b           file://0002-Add-subpackage-ptest-which-runs-all-unit-test-cases-.patch \u001b           file://0003-qemu-Add-addition-environment-space-to-boot-loader-q.patch \u001b           file://0004-qemu-disable-Valgrind.patch \u001b           file://0005-qemu-native-set-ld.bfd-fix-cflags-and-set-some-envir.patch \u001b           file://0006-chardev-connect-socket-to-a-spawned-command.patch \u001b           file://0007-apic-fixup-fallthrough-to-PIC.patch \u001b           file://0008-linux-user-Fix-webkitgtk-hangs-on-32-bit-x86-target.patch \u001b           file://0009-Fix-webkitgtk-builds.patch \u001b           file://0010-configure-Add-pkg-config-handling-for-libgcrypt.patch \u001b           file://0001-Add-enable-disable-udev.patch \u001b           file://0001-qemu-Do-not-include-file-if-not-exists.patch \u001b           file://find_datadir.patch \u001b           file://usb-fix-setup_len-init.patch \u001b           ",
  "UPSTREAM_CHECK_REGEX": "qemu-(?P<pver>\u001bd+(\u001b.\u001bd+)+)\u001b.tar",
  "SRC_URI[sha256sum]": "c9174eb5933d9eb5e61f541cd6d1184cd3118dfe4c5c4955bc1bdc4d390fa4e5",
  "COMPATIBLE_HOST": "null\nnull",
  "DEBUG_BUILD": "0",
  "QEMU_TARGETS": "arm aarch64 i386 mips mipsel mips64 mips64el ppc ppc64 ppc64le riscv32 riscv64 sh4 x86_64",
  "B": "${WORKDIR}/build",
  "do_configure[cleandirs]": "${B}",
  "PACKAGECONFIG[sdl]": "--enable-sdl,--disable-sdl,libsdl2",
  "PACKAGECONFIG[virtfs]": "--enable-virtfs --enable-attr --enable-cap-ng,--disable-virtfs,libcap-ng attr,",
  "PACKAGECONFIG[aio]": "--enable-linux-aio,--disable-linux-aio,libaio,",
  "PACKAGECONFIG[xfs]": "--enable-xfsctl,--disable-xfsctl,xfsprogs,",
  "PACKAGECONFIG[xen]": "--enable-xen,--disable-xen,xen-tools,xen-tools-libxenstore xen-tools-libxenctrl xen-tools-libxenguest",
  "PACKAGECONFIG[vnc-sasl]": "--enable-vnc --enable-vnc-sasl,--disable-vnc-sasl,cyrus-sasl,",
  "PACKAGECONFIG[vnc-jpeg]": "--enable-vnc --enable-vnc-jpeg,--disable-vnc-jpeg,jpeg,",
  "PACKAGECONFIG[vnc-png]": "--enable-vnc --enable-vnc-png,--disable-vnc-png,libpng,",
  "PACKAGECONFIG[libcurl]": "--enable-curl,--disable-curl,curl,",
  "PACKAGECONFIG[nss]": "--enable-smartcard,--disable-smartcard,nss,",
  "PACKAGECONFIG[curses]": "--enable-curses,--disable-curses,ncurses,",
  "PACKAGECONFIG[vte]": "--enable-vte,--disable-vte,vte gettext-native",
  "PACKAGECONFIG[libcap-ng]": "--enable-cap-ng,--disable-cap-ng,libcap-ng,",
  "PACKAGECONFIG[ssh]": "--enable-libssh,--disable-libssh,libssh,",
  "PACKAGECONFIG[gcrypt]": "--enable-gcrypt,--disable-gcrypt,libgcrypt,",
  "PACKAGECONFIG[nettle]": "--enable-nettle,--disable-nettle,nettle",
  "PACKAGECONFIG[libusb]": "--enable-libusb,--disable-libusb,libusb1",
  "PACKAGECONFIG[fdt]": "--enable-fdt,--disable-fdt,dtc",
  "PACKAGECONFIG[alsa]": "--audio-drv-list='oss alsa',,alsa-lib",
  "PACKAGECONFIG[glx]": "--enable-opengl,--disable-opengl,virtual/libgl",
  "PACKAGECONFIG[lzo]": "--enable-lzo,--disable-lzo,lzo",
  "PACKAGECONFIG[numa]": "--enable-numa,--disable-numa,numactl",
  "PACKAGECONFIG[gnutls]": "--enable-gnutls,--disable-gnutls,gnutls",
  "PACKAGECONFIG[bzip2]": "--enable-bzip2,--disable-bzip2,bzip2",
  "PACKAGECONFIG[libiscsi]": "--enable-libiscsi,--disable-libiscsi",
  "PACKAGECONFIG[kvm]": "--enable-kvm,--disable-kvm",
  "PACKAGECONFIG[virglrenderer]": "--enable-virglrenderer,--disable-virglrenderer,virglrenderer",
  "PACKAGECONFIG[spice]": "--enable-spice,--disable-spice,spice",
  "PACKAGECONFIG[usb-redir]": "--enable-usb-redir,--disable-usb-redir,usbredir",
  "PACKAGECONFIG[snappy]": "--enable-snappy,--disable-snappy,snappy",
  "PACKAGECONFIG[glusterfs]": "--enable-glusterfs,--disable-glusterfs,glusterfs",
  "PACKAGECONFIG[xkbcommon]": "--enable-xkbcommon,--disable-xkbcommon,libxkbcommon",
  "PACKAGECONFIG[libudev]": "--enable-libudev,--disable-libudev,eudev",
  "PACKAGECONFIG[libxml2]": "--enable-libxml2,--disable-libxml2,libxml2",
  "PACKAGECONFIG[attr]": "--enable-attr,--disable-attr,attr,",
  "PACKAGECONFIG[rbd]": "--enable-rbd,--disable-rbd,ceph,ceph",
  "PACKAGECONFIG[vhost]": "--enable-vhost-net,--disable-vhost-net,,",
  "PACKAGECONFIG[ust]": "--enable-trace-backend=ust,--enable-trace-backend=nop,lttng-ust,",
  "PACKAGECONFIG[pie]": "--enable-pie,--disable-pie,,",
  "EXTRA_OEMAKE": " LD='${LD}' AR='${AR}' OBJCOPY='${OBJCOPY}' LDFLAGS='${LDFLAGS}'",
  "INSANE_SKIP_${PN}": "arch",
  "LDFLAGS": " -fuse-ld=bfd",
  "FILES_${PN}": "${datadir}/icons"
}